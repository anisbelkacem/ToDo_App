{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\todo_app\\\\frontend\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { List, ListItem, Checkbox, IconButton, ListItemText, Paper, Divider, Typography, Box, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onToggle,\n  onDelete\n}) => {\n  _s();\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleDeleteClick = id => {\n    setTaskToDelete(id);\n    setDeleteDialogOpen(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (taskToDelete !== null) {\n      setIsProcessing(true);\n      try {\n        await onDelete(taskToDelete);\n      } finally {\n        setIsProcessing(false);\n        setDeleteDialogOpen(false);\n      }\n    }\n  };\n  const handleToggle = async task => {\n    setIsProcessing(true);\n    try {\n      await onToggle(task);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        mt: 4,\n        borderRadius: 3,\n        overflow: 'hidden',\n        backgroundColor: '#fdfdfd'\n      },\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        p: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          align: \"center\",\n          children: \"No tasks yet. Add your first task!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => handleDeleteClick(task.id),\n              disabled: isProcessing,\n              sx: {\n                color: 'error.main',\n                '&:hover': {\n                  backgroundColor: 'rgba(255,0,0,0.1)'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this),\n            sx: {\n              px: 3,\n              py: 2,\n              transition: 'background-color 0.2s ease',\n              '&:hover': {\n                backgroundColor: '#f5f5f5'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: task.completed,\n              onChange: () => handleToggle(task),\n              disabled: isProcessing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: task.title,\n              sx: {\n                ml: 1,\n                textDecoration: task.completed ? 'line-through' : 'none',\n                color: task.completed ? 'text.disabled' : 'text.primary'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), index < tasks.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 46\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: () => !isProcessing && setDeleteDialogOpen(false),\n      maxWidth: \"xs\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteDialogOpen(false),\n          color: \"primary\",\n          disabled: isProcessing,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          disabled: isProcessing,\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 24\n          }, this),\n          children: isProcessing ? 'Deleting...' : 'Delete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TaskList, \"QwnWzRKteCgrmfdyAagcdtfoyN4=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","List","ListItem","Checkbox","IconButton","ListItemText","Paper","Divider","Typography","Box","Dialog","DialogTitle","DialogContent","DialogActions","Button","DeleteIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","onToggle","onDelete","_s","deleteDialogOpen","setDeleteDialogOpen","taskToDelete","setTaskToDelete","isProcessing","setIsProcessing","handleDeleteClick","id","handleConfirmDelete","handleToggle","task","children","elevation","sx","mt","borderRadius","overflow","backgroundColor","length","p","variant","color","align","fileName","_jsxFileName","lineNumber","columnNumber","disablePadding","map","index","secondaryAction","edge","onClick","disabled","px","py","transition","checked","completed","onChange","primary","title","ml","textDecoration","open","onClose","maxWidth","fullWidth","startIcon","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/todo_app/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Task } from '../models/Task';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemText,\r\n  Paper,\r\n  Divider,\r\n  Typography,\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\ninterface TaskListProps {\r\n  tasks: Task[];\r\n  onToggle: (task: Task) => Promise<void>;\r\n  onDelete: (id: number) => Promise<void>;\r\n}\r\n\r\nconst TaskList = ({ tasks, onToggle, onDelete }: TaskListProps) => {\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [taskToDelete, setTaskToDelete] = useState<number | null>(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const handleDeleteClick = (id: number) => {\r\n    setTaskToDelete(id);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (taskToDelete !== null) {\r\n      setIsProcessing(true);\r\n      try {\r\n        await onDelete(taskToDelete);\r\n      } finally {\r\n        setIsProcessing(false);\r\n        setDeleteDialogOpen(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggle = async (task: Task) => {\r\n    setIsProcessing(true);\r\n    try {\r\n      await onToggle(task);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          mt: 4,\r\n          borderRadius: 3,\r\n          overflow: 'hidden',\r\n          backgroundColor: '#fdfdfd',\r\n        }}\r\n      >\r\n        {tasks.length === 0 ? (\r\n          <Box p={3}>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n              No tasks yet. Add your first task!\r\n            </Typography>\r\n          </Box>\r\n        ) : (\r\n          <List disablePadding>\r\n            {tasks.map((task, index) => (\r\n              <React.Fragment key={task.id}>\r\n                <ListItem\r\n                  secondaryAction={\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      onClick={() => handleDeleteClick(task.id!)}\r\n                      disabled={isProcessing}\r\n                      sx={{\r\n                        color: 'error.main',\r\n                        '&:hover': { backgroundColor: 'rgba(255,0,0,0.1)' }\r\n                      }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  }\r\n                  sx={{\r\n                    px: 3,\r\n                    py: 2,\r\n                    transition: 'background-color 0.2s ease',\r\n                    '&:hover': {\r\n                      backgroundColor: '#f5f5f5'\r\n                    }\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    edge=\"start\"\r\n                    checked={task.completed}\r\n                    onChange={() => handleToggle(task)}\r\n                    disabled={isProcessing}\r\n                  />\r\n                  <ListItemText\r\n                    primary={task.title}\r\n                    sx={{\r\n                      ml: 1,\r\n                      textDecoration: task.completed ? 'line-through' : 'none',\r\n                      color: task.completed ? 'text.disabled' : 'text.primary',\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n                {index < tasks.length - 1 && <Divider />}\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={deleteDialogOpen}\r\n        onClose={() => !isProcessing && setDeleteDialogOpen(false)}\r\n        maxWidth=\"xs\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>Are you sure you want to delete this task?</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setDeleteDialogOpen(false)}\r\n            color=\"primary\"\r\n            disabled={isProcessing}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleConfirmDelete}\r\n            color=\"error\"\r\n            variant=\"contained\"\r\n            disabled={isProcessing}\r\n            startIcon={<DeleteIcon />}\r\n          >\r\n            {isProcessing ? 'Deleting...' : 'Delete'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}