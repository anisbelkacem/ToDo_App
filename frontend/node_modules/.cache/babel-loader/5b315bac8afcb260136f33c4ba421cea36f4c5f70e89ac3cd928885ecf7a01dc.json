{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\todo_app\\\\frontend\\\\src\\\\components\\\\AddTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { addTask } from '../services/api';\n\n//import { TextField, Button, Box, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTask = ({\n  onAdd\n}) => {\n  _s();\n  const [taskTitle, setTaskTitle] = useState('');\n  const queryClient = useQueryClient();\n  const mutation = useMutation({\n    mutationFn: async newTask => {\n      const result = await addTask(newTask);\n      return result;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['tasks']\n      });\n      setTaskTitle('');\n    }\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!taskTitle.trim()) return;\n    mutation.mutate({\n      title: taskTitle,\n      completed: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 2,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        label: \"Add new task\",\n        value: taskTitle,\n        onChange: e => setTaskTitle(e.target.value),\n        disabled: mutation.isPending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: !taskTitle.trim() || mutation.isPending,\n        sx: {\n          minWidth: 120,\n          height: 56\n        },\n        children: mutation.isPending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), mutation.isError && /*#__PURE__*/_jsxDEV(Box, {\n      color: \"error.main\",\n      mt: 1,\n      children: [\"Error adding task: \", mutation.error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTask, \"12LeCvD2eb8VHX6btu1hoLHQH1w=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","addTask","jsxDEV","_jsxDEV","AddTask","onAdd","_s","taskTitle","setTaskTitle","queryClient","mutation","mutationFn","newTask","result","onSuccess","invalidateQueries","queryKey","handleSubmit","e","preventDefault","trim","mutate","title","completed","Box","component","onSubmit","sx","mb","children","display","gap","alignItems","TextField","fullWidth","variant","label","value","onChange","target","disabled","isPending","fileName","_jsxFileName","lineNumber","columnNumber","Button","type","color","minWidth","height","CircularProgress","size","isError","mt","error","message","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/todo_app/frontend/src/components/AddTask.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { addTask } from '../services/api';\r\nimport { Task } from '../models/Task';\r\n//import { TextField, Button, Box, CircularProgress } from '@mui/material';\r\n\r\ninterface AddTaskProps {\r\n  onAdd: (title: string) => Promise<void>;\r\n}\r\n\r\nconst AddTask: React.FC<AddTaskProps> = ({ onAdd }) => {\r\n  const [taskTitle, setTaskTitle] = useState('');\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation({\r\n    mutationFn: async (newTask: Omit<Task, 'id'>) => {\r\n      const result = await addTask(newTask);\r\n      return result;\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['tasks'] });\r\n      setTaskTitle('');\r\n    }\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!taskTitle.trim()) return;\r\n    mutation.mutate({ \r\n      title: taskTitle, \r\n      completed: false \r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mb: 4 }}>\r\n      <Box display=\"flex\" gap={2} alignItems=\"center\">\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Add new task\"\r\n          value={taskTitle}\r\n          onChange={(e) => setTaskTitle(e.target.value)}\r\n          disabled={mutation.isPending}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={!taskTitle.trim() || mutation.isPending}\r\n          sx={{ minWidth: 120, height: 56 }}\r\n        >\r\n          {mutation.isPending ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            'Add Task'\r\n          )}\r\n        </Button>\r\n      </Box>\r\n      {mutation.isError && (\r\n        <Box color=\"error.main\" mt={1}>\r\n          Error adding task: {mutation.error.message}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}